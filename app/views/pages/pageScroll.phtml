<!DOCTYPE html>
<html>
	<head>
		<meta charset="UTF-8">
		<title></title>
		<link rel="stylesheet" type="text/css" href="/css/pageScroll.css"/>
	</head>
	<body>
		<div class="g-container">
			<a href="javascript:;" class="recentlyChart">最近到期</a>
			<!-- 独立弹出层 -->
			<div class="g-popup">
				<section class="upText">
					<a href="javascript:;" class="close"></a>
					<div class="up-content">
						<!--<h6 class="title">最近30天的到期情况</h6>-->
						<section id="recentlyExpired" class="chart"></section>
					</div>
				</section>
			</div>
			<div class="g-content">
				<!-- 主体内容 -->
				<ul class="userAnalysis pages">
					<li class="page page-active">
						<h6 class="title">到期金额分布</h6>
						<div class="page-content">
							<header class="chart-title">
								<ul>
									<li>到期日期：<i class="endDate">4月5日</i></li>
									<li>总人数：<i class="totalMem">60,125人</i></li>
									<li>到期总金额：<i class="totalAmount">19.9亿元</i></li>
								</ul>
							</header>
							<section id="customer" class="chart"></section>
							<footer class="foot-tab">
								<table border="" cellspacing="0" cellpadding="0">
								</table>
							</footer>
						</div>
					</li>
					<li class="page">
						<h6 class="title">到期产品分布</h6>
						<div class="page-content">
							<header class="chart-title">
								<ul>
									<li>到期日期：<i class="endDate">4月5日</i></li>
									<li>总人数：<i class="totalMem">60,125人</i></li>
									<li>到期总金额：<i class="totalAmount">19.9亿元</i></li>
								</ul>
							</header>
							<section id="product" class="chart"></section>
							<footer class="foot-tab">
								<table border="0" cellspacing="0" cellpadding="0">
									<tr><td colspan="3" style="border: none;background-color: white; text-align: right;">人群会重复</td></tr>
								</table>
							</footer>
						</div>
					</li>
					<li class="page">
						<h6 class="title">到期用户定期资产AUM期限分布</h6>
						<div class="page-content">
							<header class="chart-title">
								<ul>
									<li>到期日期：<i class="endDate">4月5日</i></li>
									<li>总人数：<i class="totalMem">60,125人</i></li>
									<li>到期总金额：<i class="totalAmount">19.9亿元</i></li>
								</ul>
							</header>
							<section id="regular" class="chart"></section>
							<footer class="foot-tab">
								<table border="0" cellspacing="0" cellpadding="0">
									<tr><td colspan="3" style="border: none;background-color: white; text-align: right;">人群会重复</td></tr>
								</table>
							</footer>
						</div>
					</li>
					<li class="page">
						<h6 class="title">无定期资产AUM用户活期AUM分布</h6>
						<div class="page-content">
							<header class="chart-title">
								<ul>
									<li>到期日期：<i class="endDate">4月5日</i></li>
									<li>总人数：<i class="totalMem">60,125人</i></li>
									<li>到期总金额：<i class="totalAmount">19.9亿元</i></li>
								</ul>
							</header>
							<section id="demand" class="chart"></section>
							<footer class="foot-tab">
								<table border="" cellspacing="0" cellpadding="0">
								</table>
							</footer>
						</div>
					</li>
				</ul>
				<!-- 左侧导航键  -->
				<ol class="aside_btn">
					<li><a href="javascript:;" class="selectA"></a></li>
					<li><a href="javascript:;"></a></li>
					<li><a href="javascript:;"></a></li>
					<li><a href="javascript:;"></a></li>
				</ol>
			</div>
		</div>
	</body>
	<script type="text/javascript" src="/js/jquery.min.js"></script>
	<script type="text/javascript" src="/js/tools.js"></script>
	<script type="text/javascript" src="/js/echarts.js"></script>
	<script type="text/javascript" src="/js/chartsArr.js"></script>
	<script type="text/javascript">
		/*.setAttribute('data',submitDate)*/;
		var w = window.opener.document.getElementsByClassName('currentPosition')[0];
		var subStartDate = $(w).attr('start-date'),
			subEndDate   = $(w).attr('end-date');
		var cp = {
			main : $('.g-content').first(),
			page : $('.userAnalysis').first(),
			aBtn : $('.aside_btn').first(),
			fixed: $('.g-popup').first(),
			fText: $('.upText').first(),
			close: $('.close').first(),
			fs   : $('.recentlyChart'),
			chartsDom:['recentlyExpired','customer','product','regular','demand']
		};
		var initArr = {};// 初始数据；
		var getData = {}; // 初始化后数据；
		// 对比大小后数据；
		var size1,	
			size2,
			size5;
		var seriesName = ['定期到期','到期金额','到期产品','资产AUM','活期总金额'];//图表数据名字
		var chartShow = null;// 获取当前正在显示的chart。
		var chartsArr = chartsArr(cp.chartsDom); // chart 集合;
		
		cp.init = function(){
			cp.fText.addClass('m-assetMaturity');
			
			function getAjax(param, cb){
				$.ajax({
					type:"get",
					url:"http://ds.idc.xiwanglife.com/dataservice/getconfig.do?",
					async:true,
					data:param,
					success:function(data){
						if(cb) cb(data);
					},
					error:function(){
						switch(param.id){
							case 132:
								alert('最近30天资产到期情况   请求超时！');
								break;
							case 133:
								alert('到期金额分布   请求超时！');
								break;
							case 134:
								alert('到期产品分布   请求超时！');
								break;
							case 135:
								alert('到期用户定期资产AUM期限分布   请求超时！');
								break;
							default:
								alert('无定期资产AUM用户活期AUM分布   请求超时！');
								break;
						}
					}
				});
			};
			// callback
			function AjaxCb (data,count){
				// 返回对象自己的属性的名称。
				var list  = data.details[Object.getOwnPropertyNames(data.details)].values;
				if(list == "") return;
				if(count == 0 || count == 1 || count == 4){
					let amount = [];
					let dates = [];
					for(var i = 0;i < list.length;i++){
						amount.push(Number(list[i].amount).toFixed(1));
						dates.push(list[i].due_date);
					};
					// 大小对比
					size1 = new sizeFn(amount);
					// 图表数据
					getData[count] = {
						title		:data.configName,
						subtext		:'单位：万元',
						seriesName	:[seriesName[count]],
						xAxisData	:dates,
						seriesData	:amount,
						markPointData:[
			                {name : '最低', value : size1.min, xAxis: size1.indexMin, yAxis: size1.min},
			                {name : '最高', value : size1.max, xAxis: size1.indexMax, yAxis: size1.max}
		         	 	],
		         	 	values      : list
					};
					// 给第一张表除外的chart添加table
					
					
					if(count == 0){
						// 初始化第一张图表;
						setTimeout(function(){
							if(!getData[count]){
								return;
							}else{
								chartsArr[0]();
							} 
						},1000);
					}
				}else{
					let series = [];
					let nameList = [];
					for(var i = 0;i < list.length;i++){
						series.push({'value':Number(list[i].amount).toFixed(1),'name':list[i].tag});
						nameList.push(list[i].tag);
					};
					getData[count] = {
						title		: data.configName,
						seriesName	: seriesName[count],
						legendData	: nameList,
						seriesData	: series,
		         	 	values      : list
					};
				}
			}
			// max & min
			function sizeFn(a){
				this.arr = a;					 // 对比数组
				this.max = parseInt(this.arr[0]);// 最大值
				this.min = parseInt(this.arr[0]);// 最小值
				this.indexMax = 0;				 // 最大值下标
				this.indexMin = 0;				 // 最小值下标
				var len  = this.arr.length;
				for(var i = 1;i < len;i++){
					if(parseInt(this.arr[i]) > this.max){
						this.max = this.arr[i];
						this.indexMax = i;
					};
					if(parseInt(this.arr[i]) < this.min){
						this.min = this.arr[i];
						this.indexMin = i;
					}
				}
			}
			
			// 1
			var d = new Date();
			var start1 = d.format("yyyy-MM-dd") + " 00:00:00";//yyyy-MM-dd hh:mm:ss
			var end1 = d.add('d', +31).format("yyyy-MM-dd") + " 00:00:00";
			getAjax({id:132,date1start: start1,date1end: end1},function(data){ AjaxCb(data,0) });
			// 2
			getAjax({id:133,date1start: subStartDate,date1end: subEndDate},function(data){ AjaxCb(data,1) });
			// 3
			getAjax({id:134,date1start: subStartDate,date1end: subEndDate},function(data){ AjaxCb(data,2) });
			// 4
			getAjax({id:135,date1start: subStartDate,date1end: subEndDate},function(data){ AjaxCb(data,3) });
			// 5
			getAjax({id:136,date1start: subStartDate,date1end: subEndDate},function(data){ AjaxCb(data,4) });
		};
		cp.Event = function(){
			var count;// 打开弹出层前记录正在显示的chart下标,目的是为了关闭时返回上次操作;
			cp.close.click(function(){
				// 关闭按钮不可见，同时弹出层收起隐藏,悬浮窗淡出。
				$(this).css('opacity','0');
				cp.fText.removeClass('m-assetMaturity');
				cp.fixed.find('.chart').empty();
				setTimeout(function(){
					cp.fixed.fadeOut(100);
					// 此处返回上次操作的chart
					if(!count){
						if(!getData[1]){
							setTimeout(function(){return;},1000);
						}else{
							chartsArr[1]();
						} 
						
					}else{
						if(!getData[count]){
							setTimeout(function(){return;},1000);
						}else{
							chartsArr[count]();
						} 
					}
					
				},1000);
			});
			cp.fs.click(function(){
				cp.fixed.fadeIn(100);
				cp.close.css('opacity','1');
				cp.fText.addClass('m-assetMaturity');
				count = chartShow;
				setTimeout(function(){
					if(!getData[0]){
						return;;
					}else{
						chartsArr[0]();
					}
				},1000);
			})
		};
		var w = cp.main;
			w.st = w.scrollTop();
			w.showPageClass = 'page-active';
		var curElement = w.find('.page:first');
		var b = cp.aBtn.children('li');
		var timer = false;
		cp.Scroll = function(){
			w.scroll(function(e){
				/* 
				 * 1. timer 用来控制页面切换动画，同一时间段只能存在一个。
				 * 2. 获取初始initSt值  - 滚轮滚动st = 向上 || 向下。
				 * 3. initSt + pageHeight = new initst。
				 * 4. 将类“page-active”替换给当前可视窗显示的page。
				 * 5. 右侧导航按钮样式
				 * */
				if(!timer){
					timer = true;
					// init show page。
					if(($(this).scrollTop() - w.st) > 0){
						//向下
						$(this).animate({scrollTop:$(this).scrollTop() + curElement.height() },500);
						// 将类“page-active”替换给当前可视窗显示的page。
						if($('.page-active').index() < 3)
						w.find('.'+w.showPageClass).removeClass(w.showPageClass).next().addClass(w.showPageClass);
					}else{
						//向上
						$(this).animate({scrollTop:$(this).scrollTop() - curElement.height()},500);
						// 将类“page-active”替换给当前可视窗显示的page。
						if($('.page-active').index() > 0)
						w.find('.'+w.showPageClass).removeClass(w.showPageClass).prev().addClass(w.showPageClass);
					}
					// 改变右侧导航样式
					b.children('a').removeClass('selectA').eq($('.'+w.showPageClass).index()).addClass('selectA');
					setTimeout(function(){
						timer = false;
					},600);
					// 加载 对应chart
					if(!getData[$('.page-active').index()+1]){
						setTimeout(function(){return;},1000);
					}else{
						chartsArr[$('.page-active').index()+1]();
					}
				};
				w.st = $(this).scrollTop();
			})
			// click aside a
			b.click(function(){
				if(!timer){
					timer = true;
					var aIndex = $(this).index();
					var sizeH   = curElement.height(); 
					w.st = sizeH * aIndex;
					w.find('.page').removeClass(w.showPageClass).eq(aIndex).addClass(w.showPageClass);
					// 改变右侧导航样式
					b.children('a').removeClass('selectA').eq($('.'+w.showPageClass).index()).addClass('selectA');
					w.animate({scrollTop: w.st},500);
					setTimeout(function(){
							timer = false;
					},600)
					// 加载 对应chart
					if(!getData[aIndex+1]){
						setTimeout(function(){return;},1000);
					}else{
						chartsArr[aIndex+1]();
					} 
				}else{
					return
				}
				
			});
		};
		cp.init();
		cp.Event();
		cp.Scroll();
		
		// 延时加载chart，原因在于box 高度正在初始化；
		function outChart(){
			// 测试中
			var Key = null;
			if(!chartShow) Key = a;
			Key = chartShow;
			setTimeout(function(){
				if(!getData[Key]){
					setTimeout(function(){return;},1000);
				}else{
					chartsArr[Key]();
				} 
			},1000);
		}
		
		// resize
		$(window).resize(function(){
			if(!timer){
				timer = true;
				var index = w.find('.'+w.showPageClass).index();
				var sizeH   = curElement.height(); 
				w.st = sizeH * index;
				w.animate({scrollTop: w.st},10);
				setTimeout(function(){
					timer = false;
				},20)
			};
			// 窗口大小发生变化，清空chart box。
			$('#'+cp.chartsDom[chartShow]).empty();
			// 重新加载当前显示的图表。
			if(!getData[chartShow]){
				setTimeout(function(){return;},1000);
			}else{
				chartsArr[chartShow]();
			} 
		})
	</script>
</html
